nameOverride: external

controller:
  extraVolumeMounts:
    - name: groups-lua-script
      mountPath: /usr/local/nginx/lua
      readOnly: true

  extraVolumes:
    - name: groups-lua-script
      configMap:
        name: nginx-lua-scripts
        items:
        - key: auth.lua
          path: auth.lua

  nodeSelector:
    project: core
  tolerations:
    - key: project
      operator: Equal
      value: core
  image:
    repository: artifactory.cicd.ocean.pmicloud.biz/docker/ingress-nginx/controller

  config:
    enable-real-ip: "true"
    hsts: "true"
    hsts-include-subdomains: "true"
    hsts-preload: "true"
    hsts-max-age: "31536000"
    proxy-body-size: "1m"
    client-header-buffer-size: "64k"
    error-log-level: "warn"
    use-geoip: "false"
    proxy-read-timeout: "60"
    proxy-send-timeout: "60"
    use-forwarded-headers: "true"
    log-format-escape-json: "true"
    log-format-upstream: '{ "@timestamp": "$time_iso8601", "remote_addr":
        "$remote_addr", "x-forward-for": "$proxy_add_x_forwarded_for",
        "request_id": "$req_id", "remote_user": "$remote_user", "bytes_sent":
        "$bytes_sent", "request_time": "$request_time", "status": "$status",
        "vhost": "$host", "request_proto": "$server_protocol", "path": "$uri",
        "request_query": "$args", "request_length": "$request_length",
        "duration": "$request_time", "method": "$request_method", "http_referrer":
        "$http_referer", "http_user_agent": "$http_user_agent" }'

  ingressClassByName: false

  electionID: ingress-controller-leader-external

  ingressClassResource:
    name: nginx-external
    controllerValue: "k8s.io/ingress-nginx-external"

  ingressClass: nginx-external

  service:
    type: NodePort

  metrics:
    enabled: true
    service:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "10254"

  admissionWebhooks:
    enabled: false
